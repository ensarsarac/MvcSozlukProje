
@model EntityLayer.Concrete.Writer

@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Yeni Yazar Ekle</h2>
<br />
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Yazar Adı:")
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.Label("Yazar Soyadı:")
        @Html.TextBoxFor(x => x.Surname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Surname, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Hakkında: ")
        @Html.TextAreaFor(x => x.About, 6, 6, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.About, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Ünvan: ")
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Şifre: ")
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Mail: ")
        @Html.TextBoxFor(x => x.Mail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Mail, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Resim: ")
        @Html.TextBoxFor(x => x.Image, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Image, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Yazar Kaydet</button>
}
